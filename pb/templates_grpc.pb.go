// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TemplatesServiceClient is the client API for TemplatesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TemplatesServiceClient interface {
}

type templatesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTemplatesServiceClient(cc grpc.ClientConnInterface) TemplatesServiceClient {
	return &templatesServiceClient{cc}
}

// TemplatesServiceServer is the server API for TemplatesService service.
// All implementations must embed UnimplementedTemplatesServiceServer
// for forward compatibility
type TemplatesServiceServer interface {
	mustEmbedUnimplementedTemplatesServiceServer()
}

// UnimplementedTemplatesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTemplatesServiceServer struct {
}

func (UnimplementedTemplatesServiceServer) mustEmbedUnimplementedTemplatesServiceServer() {}

// UnsafeTemplatesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TemplatesServiceServer will
// result in compilation errors.
type UnsafeTemplatesServiceServer interface {
	mustEmbedUnimplementedTemplatesServiceServer()
}

func RegisterTemplatesServiceServer(s grpc.ServiceRegistrar, srv TemplatesServiceServer) {
	s.RegisterService(&TemplatesService_ServiceDesc, srv)
}

// TemplatesService_ServiceDesc is the grpc.ServiceDesc for TemplatesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TemplatesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TemplatesService",
	HandlerType: (*TemplatesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "templates.proto",
}
